
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSuperAdmin() {
      // Check if the user is the designated super admin.
      return request.auth.token.email == 'esxy26@gmail.com' && request.auth.token.email_verified;
    }

    match /users/{userId} {
      // Users can create their own profile, and only they can read/update it.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Allow user to manage their own custom songs
      match /userSongs/{songId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow user to manage references to their own synced setlists
      match /userSetlists/{setlistId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    match /songs/{songId} {
      // Any authenticated user can read system songs.
      allow read: if request.auth != null;
      // Only super admins can write to the central song collection.
      allow write: if isSuperAdmin();
    }
    
    match /setlists/{setlistId} {
       // Allow read if the setlist is public, or if the user is the owner, or if the user is a super admin
      allow read: if resource.data.isPublic == true || 
                   (request.auth != null && request.auth.uid == resource.data.userId) ||
                   isSuperAdmin();
                   
      // Any authenticated user can create a setlist document.
      allow create: if request.auth != null;
      
      // Only the owner can update or delete their setlist.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
